# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UJhO2ZXYDACSF35UHaIWT1bTOFGPjDYS
"""

from Bosch_gender_n_age.dla import dla34
from torchvision import transforms
import cv2
import torch

def init_age_model():
    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
    model = dla34().to(device)
    model.load_state_dict(torch.load('/content/Bosch_gender_n_age/age_regression_best_val.pth', map_location=device))
    return model

def age_regression(img, model):
    with torch.no_grad():
        device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
        img = cv2.resize(img,(256,256))
        # img = np.transpose(img, (2,0,1))

        transform = transforms.Compose([
                transforms.ToTensor(),
                transforms.Normalize(mean=[0.5946, 0.4548, 0.3891], std=[0.2191, 0.1949, 0.1856])
            ])

        img = transform(img)
        img = img.to(device)
        model.eval()
    return model(img.unsqueeze(0)).item()

age_model = init_age_model()
img_path = 'https://drive.google.com/drive/folders/1FUkx3iBUiXFpPx6Cm9MTsTpPInOZFsfG'
img = cv2.imread(img_path)
img = cv2.resize(img,(256,256))
age = age_regression(img, age_model)